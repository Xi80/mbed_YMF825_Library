#ifndef H_YMF825
#define H_YMF825

#include "mbed.h"
#include "ymf825tone.h"

class ymf825{
    public:   
        struct channel{
            bool isUsed = false;
            uint8_t noteNumber = 0;
        };

        ymf825(PinName mosi,PinName miso,PinName sck,PinName chipSelect,PinName reset);
        ymf825(SPI spi,PinName chipSelect,PinName reset);

        void sendTone(void);
        void setToneListFromGM(uint8_t ch,uint8_t num);

        void noteOn(uint8_t channel,uint8_t note,uint8_t vol,uint8_t inst,unsigned short pb);
        void noteOff(uint8_t channel);

        void pitchBend(uint8_t channel,unsigned short pb);

    private:
        SPI _spi;
        DigitalOut _chipSelect,_reset;

        void init(void);
        
        void singleWrite(uint8_t addr,uint8_t data);
        void burstWrite(uint8_t addr,uint8_t *data,int length);
        const uint8_t fNumberTableHigh[128] = {
            0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x18,0x18,
            0x18,0x18,0x18,0x20,0x20,0x20,0x20,0x28,0x11,0x11,0x19,0x19,0x19,0x19,0x19,0x21,
            0x21,0x21,0x21,0x29,0x12,0x12,0x1a,0x1a,0x1a,0x1a,0x1a,0x22,0x22,0x22,0x22,0x2a,
            0x13,0x13,0x1b,0x1b,0x1b,0x1b,0x1b,0x23,0x23,0x23,0x23,0x2b,0x14,0x14,0x1c,0x1c,
            0x1c,0x1c,0x1c,0x24,0x24,0x24,0x24,0x2c,0x15,0x15,0x1d,0x1d,0x1d,0x1d,0x1d,0x25,
            0x25,0x25,0x25,0x2d,0x16,0x16,0x1e,0x1e,0x1e,0x1e,0x1e,0x26,0x26,0x26,0x26,0x2e,
            0x17,0x17,0x1f,0x1f,0x1f,0x1f,0x1f,0x27,0x27,0x27,0x27,0x2f,0x10,0x10,0x18,0x18,
            0x18,0x18,0x18,0x20,0x20,0x20,0x20,0x28,0x11,0x11,0x19,0x19,0x19,0x19,0x10,0x1e,
        };
        
        const uint8_t fNumberTableLow[128] = {
            0x65,0x65,0x65,0x65,0x65,0x65,0x65,0x65,0x65,0x65,0x65,0x65,0x65,0x7a,0x11,0x29,
            0x42,0x5d,0x79,0x17,0x37,0x59,0x7d,0x22,0x65,0x7a,0x11,0x29,0x42,0x5d,0x79,0x17,
            0x37,0x59,0x7d,0x22,0x65,0x7a,0x11,0x29,0x42,0x5d,0x79,0x17,0x37,0x59,0x7d,0x22,
            0x65,0x7a,0x11,0x29,0x42,0x5d,0x79,0x17,0x37,0x59,0x7d,0x22,0x65,0x7a,0x11,0x29,
            0x42,0x5d,0x79,0x17,0x37,0x59,0x7d,0x22,0x65,0x7a,0x11,0x29,0x42,0x5d,0x79,0x17,
            0x37,0x59,0x7d,0x22,0x65,0x7a,0x11,0x29,0x42,0x5d,0x79,0x17,0x37,0x59,0x7d,0x22,
            0x65,0x7a,0x11,0x29,0x42,0x5d,0x79,0x17,0x37,0x59,0x7d,0x22,0x65,0x7a,0x11,0x29,
            0x42,0x5d,0x79,0x17,0x37,0x59,0x7d,0x22,0x65,0x7a,0x11,0x29,0x42,0x5d,0x65,0x5d,
        };

        const unsigned short tPitTbl[256] = {
            256,257,259,260,262,263,264,266,267,269,270,272,273,275,276,278,
            279,281,282,284,285,287,288,290,292,293,295,296,298,300,301,303,
            304,306,308,309,311,313,314,316,318,320,321,323,325,327,328,330,
            332,334,336,337,339,341,343,345,347,349,350,352,354,356,358,360,
            362,364,366,368,370,372,374,376,378,380,382,384,386,388,391,393,
            395,397,399,401,403,406,408,410,412,415,417,419,421,424,426,428,
            431,433,435,438,440,442,445,447,450,452,454,457,459,462,464,467,
            470,472,475,477,480,482,485,488,490,493,496,498,501,504,506,509,
            512,515,518,520,523,526,529,532,535,538,540,543,546,549,552,555,
            558,561,564,567,571,574,577,580,583,586,589,593,596,599,602,606,
            609,612,616,619,622,626,629,632,636,639,643,646,650,653,657,660,
            664,668,671,675,679,682,686,690,693,697,701,705,709,712,716,720,
            724,728,732,736,740,744,748,752,756,760,764,769,773,777,781,785,
            790,794,798,803,807,811,816,820,825,829,834,838,843,847,852,856,
            861,866,870,875,880,885,890,894,899,904,909,914,919,924,929,934,
            939,944,949,954,960,965,970,975,981,986,991,997,1002,1007,1013,1023
        };

        uint8_t toneList[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
};

#endif